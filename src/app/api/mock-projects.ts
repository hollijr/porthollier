import { Project } from '../projects/project';

// though 'component' property is null, it needs to be included because it is used by dcl-wrapper to dynamically create a component
export const PROJECTS:Project[] = [
{ "id": 24, 
    "title": "Cakespatter Cake Designer", 
    "technology": ["Angular 1.5", "Bootstrap", "CSS", "HTML", "JavaScript", "jQuery", "Three.js"], 
    "summary": "A 3D cake designing single-page app", 
    "description": "<p>I like to bake and decorate cakes so I started developing a 3D cake designing software.  Check it out at <a href='http://cakespatter.com.' target='blank'>cakespatter.com</a></p>", 
    "img": "assets/images/cakespatter.jpg", 
    "componentName": "",
    "component": null,
    "demo": "<img src='assets/images/cakespatter1.jpg'>",
    "demoLink": "http://cakespatter.com",
    "codeRepo": "",
    "isFavorite": true },
  { "id": 11, 
    "title": "Gauge Control", 
    "technology": ["JavaScript", "HTML5 Canvas"], 
    "summary": "A JavaScript object that runs in the HTML5 canvas", 
    "description": "<p>The gauge control is a JavaScript object that draws to an HTML Canvas.  The canvas element is included as a property in the parameters object that is passed to the Gauge control object at construction.  This object was my first work working with the HTML5 canvas.</p>", 
    "img": "assets/images/gauge.png", 
    "componentName": "GaugeComponent",
    "component": null,
    "demo": "<p>This demo contains a gauge control that runs in the HTML canvas.  There are three ways to see how the gauge works:</p><ul><li>drag the handle on the vertical slider to manually change the input value for the gauge. (I made this slider using the HTML canvas and JavaScript.)</li><li>change the setting of the HTML range control shown below the gauge.  This control's appearance will vary based on your browser.  The range of the control is 0% to 100% of the maximum input value of the gauge.</li><li>click on the 'Start Simulation' button to run a simulation using randomly-generated input values.  The simulation randomly generates a target input value in the gauge's range and moves the gauge needle to that target value.  Once at the target value, a random-length pause occurs (the needle stops moving) followed by the generation of a new target value (so the needle starts moving again).  While the simulation is running, the preceding two manual controls for changing input are inactivated.</li></ul><p>The settings of the control can be modified using the form at the bottom of the page.</p>",
    "demoLink": "",
    "codeRepo": "https://github.com/hollijr/a-little-control",
    "isFavorite": true },
  { "id": 12, 
    "title": "Tank Game", 
    "technology": ["Android"], 
    "summary": "An Android app based on the Atari Tank game", 
    "description": "<p>This two-player game was written for Android mobile devices.</p>", 
    "img": "assets/images/tanks.jpg", 
    "componentName": "",
    "component": null,
    "demo": "<p>Following are screenshots from app.</p><div class='margin-bottom20'><img src='assets/images/tankMain.jpg' class='full-width'></div><div class='margin-bottom20'><img src='assets/images/tankReady.jpg' class='full-width'></div><div class='margin-bottom20'><img src='assets/images/tankMove.jpg' class='full-width'></div><div class='margin-bottom20'><img src='assets/images/tankShoot.jpg' class='full-width'></div>",
    "demoLink": "",
    "codeRepo": "",
    "isFavorite": true },
  { "id": 13, 
    "title": "BandBox Salon Web Site", 
    "technology": ["WordPress", "PHP"], 
    "summary": "A WordPress Web Site", 
    "description": "<p>After trying out WordPress for my own site, I decided to use it to quickly create a site for the Bandbox Hair and Nail Salon. Since WordPress and its templates are written in PHP, it was so much quicker and easier to find a base template that worked for the business and then customize it to their needs!</p><p>(2016 Update: The owner of the site has discontinued her hosting service so the site it no longer available to view.)</p>", 
    "img": "assets/images/bandbox.jpg", 
    "componentName": "",
    "component": null,
    "demo": "<p>Following are screenshots from the development version of the site.  To save time on styling and provide the content management facility, I started with a SiteOrigin Wordpress template.</p><p>On the home page, I redesigned the layout of the theme, adding the carousel, a Facebook feed and removing unnecessary pieces of the view.</p><div class='margin-bottom20'><img src='assets/images/bb-home.jpg' class='full-width'></div><div class='margin-bottom20'><img src='assets/images/bb-services.jpg' class='full-width'></div><div class='margin-bottom20'><img src='assets/images/bb-location.jpg' class='full-width'></div>",
    "demoLink": "",
    "codeRepo": "",
    "isFavorite": false },
  { "id": 23, 
    "title": "PortHollier Web Site", 
    "technology": ["Angular 2.0", "Bootstrap", "CSS", "HTML", "PHP", "TypeScript", "JavaScript", "Photoshop"], 
    "summary": "My personal portfolio site built using Angular 2", 
    "description": "<p>I created my original personal web site using WordPress, Joomla and custom PHP.  When it came time to update the data in the site, I decided I wanted a new site altogether.  So I built this new portfolio site (the one you're currently accessing) using Angular 2.0.</p><p>This site is the first project I've done using Angular 2.0, which was in beta(late RC) when I started the rewrite and was subsequently released prior to my completing this site.  So initially, there was not a lot of documentation for the framework (and therefore, a lot of trial and error and googling on my part...).  Though I had already written a project using Angular 1.5 (i.e., cakespatter), learning Angular 2.0 had a steep learning curve as essentially, I had to stop thinking in 1.5 terms and look at things in the new 2.0 way.  Good fun.</p><p>The most interesting piece in writing this site was implementing dynamic creation of unique components.  Looking at the site, when you click on one of my JavaScript-based projects from the 'Projects' page, the project details page that appears contains a dynamically-created component in the 'demo' portion (bottom half) of the page.  The project details page is itself a reusable component and the nested 'demo' component varies based on which project was selected.  Each demo component is unique rather than sharing a reusable template.  To make this work, I created the demo components and put the name of each component's class into the 'Project' model (meaning, 'componentName' is a property of my Project class).  Then when a project is selected, if the project has a componentName (a string) assigned, a Component object matching the name of the component will be dynamically created and displayed.  I used the DCLWrapper component (credit: Günter Zöchbauer, <a href='http://stackoverflow.com/questions/36325212/angular-2-dynamic-tabs-with-user-click-chosen-components/36325468#36325468' target='blank'>http://stackoverflow.com/questions/36325212/angular-2-dynamic-tabs-with-user-click-chosen-components/36325468#36325468</a>) to convert the string name to a Type, which is then used by the ComponentFactoryResolver to create the needed component.</p><p>The dynamic components I created were slightly more complex than the Dynamic Tabs example that was used to explain usage of the DCLWrapper because these components all have one or more nested HTML canvas elements. Essentially, I'm using a component to embed a canvas application into the project details page.  So in the end, making this work was challenging but it taught me a lot about how Angular 2.0 works.</p>", 
    "img": "assets/images/frog250.jpg", 
    "componentName": "",
    "component": null,
    "demo": "",
    "demoLink": "",
    "codeRepo": "https://github.com/hollijr/a-little-control",
    "isFavorite": true },  
  { "id": 14, 
    "title": "Kent Swim & Tennis Club Web Site", 
    "technology": ["HTML", "CSS", "JavaScript", "PHP", "MySQL"], 
    "summary": "A LAMP-based web application", 
    "description": "<p>This site is built from the ground up using the LAMP stack. It was my first use of PHP.  The system was broken into three modules, each associated with a specific access permission level.</p><p>(2016 Update: Because I no longer had time to support this website, I encouraged this club to move to TeamUnify to provide their website services. They finally did so this year.)</p>", 
    "img": "assets/images/kstc.jpg", 
    "componentName": "",
    "component": null,
    "demo": "<p>Following are screenshots from the development system for this site.</p><p>The home page and associated pages linked from the sidebar were open to all users.  Navigation was possible by clicking on menu links or by clicking on one of the pictures in the main content window.</p><div class='margin-bottom20'><img src='assets/images/kstc-home.jpg' class='full-width'></div><p>Selecting either the 'Members' or 'Administration' links required access privilege.  The 'Members' link was restricted to members only so users had to login to access the menu (shown in sidebar) belonging to the 'Members' module.</p><div class='margin-bottom20'><img src='assets/images/kstc-memonly.jpg' class='full-width'></div><p>Administration of the site content was restricted to members of the board of trustees.  They were able to update database content through the administration menu as well as update page content and layout.  The following images show how a user can create, delete, update and rearrange different views of the pages that are accessible from the home menu.  The snapshots show how the 'Swim Team' page is maintained, with the last image showing the resulting page that was presented to users from the Home menu.</p><div class='margin-bottom20'><img src='assets/images/kstc-admin.png' class='full-width'></div><p>The result:</p><div class='margin-bottom20'><img src='assets/images/kstc-swim.jpg' class='full-width'></div>",
    "demoLink": "",
    "codeRepo": "",
    "isFavorite": false },
  { "id": 15, 
    "title": "Club Entry System", 
    "technology": ["Java", "MySQL"], 
    "summary": "A Java/MySQL application for tracking member attendance", 
    "description": "<p>I wrote an object-oriented Java desktop application with a MySQL database backend to track member attendance.  Members were given RFID key fobs, which they swiped upon arrival and the system responded by retrieving and displaying the appropriate membership data in the check-in screen.  Also, I incorporated input from an attached USB camera to capture and store member identification photos.  The system consisted of two parts: an attendance module, which was used by the club staff to check members in, and an administration module, which was used by the membership board member to add, update and delete member information.  I also added a history utility that the operations leadership used to search and filter attendance records in order to identify attendance trends and anticipate staffing needs.</p>", 
    "img": "assets/images/ces.jpg", 
    "componentName": "",
    "component": null,
    "demo": "",
    "demoLink": "",
    "codeRepo": "",
    "isFavorite": false },
  { "id": 16, 
    "title": "Vizalgo", 
    "technology": ["JavaScript", "HTML5 Canvas"], 
    "summary": "Visualizing well-known sort algorithms", 
    "description": "<p>Vizalgo (short for ‘visualizing algorithms’) is a Javascript/HTML5 Canvas application that animates several well-known sorting algorithms. The purpose of the project was three-fold: 1) to brush up on the different types of sort algorithms; 2) to get more experience using Javascript and HTML5; and 3) to learn git by creating and maintaining a ‘vizalgo’ repository on Github. The complete source is available on Github at <a href='https://github.com/hollijr/vizalgo' target='_blank'>https://github.com/hollijr/vizalgo</a>.</p>", 
    "img": "assets/images/vizalgo-624x469.png", 
    "componentName": "VisalgoComponent",
    "component": null,
    "demo": "",
    "demoLink": "",
    "codeRepo": "https://github.com/hollijr/vizalgo",
    "isFavorite": false },
  { "id": 17, 
    "title": "Linked List Train", 
    "technology": ["JavaScript", "HTML5 Canvas"], 
    "summary": "A JavaScript animation that depicts how a linked list works", 
    "description": "<p>Visualizing a linked list data structure always makes me think of a train, where the list nodes are cars in the train and the next/previous node pointers are the back/front couplings on the car. So just for fun, I put together a little HTML5 Canvas/Javascript app using a linked list data structure to animate a train, including some train sounds. (The sounds are .ogg format so they won’t work on Safari 5+ or IE 9+)</p>", 
    "img": "assets/images/linkedListTrain.jpg", 
    "componentName": "LLTrainComponent",
    "component": null,
    "demo": "<iframe width='300px' height='500px' src='assets/code/traindemo.html'></iframe>",
    "demoLink": "",
    "codeRepo": "https://github.com/hollijr/linked-list-train",
    "isFavorite": false },
  { "id": 19, 
    "title": "Algorithms & Data Structures", 
    "technology": ["Python"], 
    "summary": "Source code for common sort algorithms and data structures, written in Python", 
    "description": "<p>On-going learning is important to me.  I like to do the udacity.com online courses, both to learn new skills and to keep old skills from getting rusty.  Recently, I started one of their courses on algorithms and data structures.  While I wrote many of the same basic algorithms and data structures in my computer science classes at the UW, I wrote those in Java.  udacity.com uses Python.  So for fun (and to brush up), I took the class and wrote lots of Python code.</p>", 
    "img": "assets/images/structAlgoLabels.jpg", 
    "componentName": "PythonSamplesComponent",
    "component": null,
    "demo": "",
    "demoLink": "",
    "codeRepo": "",
    "isFavorite": false },
  { "id": 18, 
    "title": "V-Braille Web Site", 
    "technology": ["HTML", "CSS"], 
    "summary": "An informational web site", 
    "description": "<p>I developed the VBraille web site using PHP. Though simple, this site serves to communicate the exciting applications being developed by the MobileAccessibility project at the University of Washington’s Computer Science and Engineering department. I worked on two of these apps, V-B-Reader and V-B-Writer, which are designed to help children who are blind learn to read and write Braille.</p>", 
    "img": "assets/images/vbraille.jpg", 
    "componentName": "",
    "component": null,
    "demo": "",
    "demoLink": "http://vbraille.cs.washington.edu/Home",
    "codeRepo": "",
    "isFavorite": false },
  { "id": 20, 
    "title": "Trash-Basket Ball Game", 
    "technology": ["Android"], 
    "summary": "A simple mobile game where you shoot a ball and try to get it in a trashbasket", 
    "description": "<p>Some time ago, I wrote this simple touch-based mobile game where the goal of the game is to shoot the ball into a trashbasket. The game starts by displaying a trashbasket in the upper 1/3 of the screen and a ball in the lower 1/3.  You put your finger on the ball and drag down at the angle at which (s)he wants the ball to travel in order for it to bounce off the side and top walls and into the basket.  A guide line appears to show the current angle based on where your finger is relative to the ball.  The farther away from the ball you drag, the longer the guide line becomes. When you have the angle you want, just lift your finger to send the ball on its way.</p><p>By default, you have up to three tries to hit the basket from the same starting location.  If you fail to hit the basket in these tries, the location of the basket and the ball change and you get a new set of tries.  The number of tries is an option that can be changed.</p><p>The game has sounds (which can optionally be muted): \"cheers\" when you sink the ball and \"ahs\" when you miss.</p><p>Scoring works as follows: you get one point for making the basket plus one point for each surface the ball touches before it goes into the basket.  You can optionally set the game to deduct a point each time you miss the basket.</p><p>Below is a video clip of the game being played on the Android Studio emulator.  The mouse simulates a user's finger and a black circle flashes when a 'touch' is made on screen.</p>", 
    "img": "assets/images/trashbasketball.jpg", 
    "componentName": "",
    "component": null,
    "demo": "<iframe width='480' height='270' src='https://www.youtube.com/embed/MSEHcUGivfc' frameborder='0' allowfullscreen></iframe><div' class='full-width'>After starting the video, make sure close captioning (CC) is turned on to see descriptions of game play.</div>",
    "demoLink": "",
    "codeRepo": "",
    "isFavorite": false },
  { "id": 21,
    "title": "Family Calendar", 
    "technology": ["Google Calendar"], 
    "summary": "Sharing a Google calendar", 
    "description": "<p>This project involved replacing the family calendar with an online version using Google Calendar.</p><p>Below is the blog post I wrote at the conclusion of the project.</p>", 
    "img": "assets/images/calendar.jpg", 
    "componentName": "",
    "component": null,
    "demo": "<div class='full-width pull-right'><p><em>Originally posted: Oct 27, 2012</em></p></div>" +
    "<div class='full-width bottom-spacer'><p>For years, I've used a traditional paper calendar that hangs on the kitchen wall to schedule all my family's activities, appointments and school reminders.  My husband and kids have learned that if something's not written on the kitchen calendar, it isn't happening.  Of course the drawback of the kitchen calendar is that you can only see it when you're in the kitchen.  When my kids were young and I spent most of my days at home, this wasn't such an issue.  But nowadays, my family is much more mobile and we need a single family calendar that can simultaneously travel with each of us as we head in different directions.  The solution?  A shared calendar in the cloud that we can all see and update from (almost) anywhere.</p>" +
    "<p>There are many cloud-based services that provide the ability to create and share a family calendar (e.g., iCloud, Hotmail, etc.) but since I was already familiar with Google Calendar and everyone in my family had a Google user account, it was the obvious choice for us.  In my family of five, we each have our own mobile phones (two iPhones, two Android phones and one Windows 7 phone) and need the capability to access the family calendar from each of them.  Not a problem!  Google has this ability and provides <a href='https://support.google.com/calendar/bin/topic.py?hl=en&amp;topic=13950&amp;p=syncmobile'>instructions for syncing a Google calendar with each of the phones we use</a>.</p>" +
    "<h3 id='create_hdr'>Creating and Sharing the Calendar</h3><p>So now it was time to create the shared family calendar:</p>" +
    "<ol><li>I signed in to my Google account at <a href='http://www.google.com'>http://www.google.com</a>.  (If you don't already have an account, just click on the <strong>Gmail</strong> link in the navigation bar at the top, then on the 'Create an account' link and  you will be walked through creating one.)</li><li>I went to <strong>Gmail</strong>  and made sure all my family members were added as Contacts so that I can easily invite them to events.</li><li>Then I selected <strong>Calendar</strong> from the top navigation bar to go to my Google calendar home , which displays a consolidated view of my active calendars.  In the sidebar, I selected the drop-down arrow to the right of the 'My calendars' heading, then selected 'Create new calendar'.</li><li>I entered a name for my family calendar then skipped down to the 'Share with specific people' section where I entered the Gmail addresses of my family members, one at a time, in the 'Person' field.  I gave my husband permission to 'Make changes AND manage sharing' but since I didn't want my children inadvertently sharing our family calendar with their friends, I only gave them 'Make changes to events' permission.  The difference in permission levels also means that in my husband's Google Calendar home page, the family calendar will be shown in his 'My calendars' list while it will be listed under 'Other calendars' for my children.</li><li>Then I clicked on 'Create Calendar' button, which returned me back to my calendar home page and after a brief pause, the new family calendar's name appeared under the 'My calendars' heading.  Voila!</li></ol>" +
    "<p>My family members received emails to let them know I'd shared this new calendar with them and the emails included a link to go to their Google calendar home page.   Of course, the shared family calendar they saw was empty because none of us had added any events to it.  So my next step was to transfer all my handwritten appointments from my paper calendar to the family cloud calendar.  You can create a new event (e.g., appointment) on the family calendar in more than one way:</p>" +
    "<ol><li>Hover over the family calendar's name and click the drop-down menu arrow that appears to its right, then from that menu, select 'Create event on this calendar'.   The subsequent screen allows you to enter detailed information about the event, including things like whether it is a repeating event and which guests (i.e., family members) you'd like to invite to the event.</li><li>Double-click on a day/time in the calendar view.  As with the previous option, you'll be taken straight to the detailed event screen.  Be sure to select the name of the calendar to which the event should be added.</li><li>Single click on a day/time in the calendar view to quickly add an event.  Instead of the detailed screen, a summary dialog will pop up that lets you just add the basics for the event.  To add more detailed info, you can select the 'Edit Event' link at the bottom of the dialog.  Otherwise, select 'Create Event' to add the event to the calendar.</li></ol>" +
    "<div><p>Once a new event is added, it will appear in the consolidated view on your Google Calendar home page (as long as you have activated the calendar to which it belongs).</p></div>" +
    "<img class='image-responsive' title='calendar' src='assets/images/calendar.jpg' alt='Google Calendar consolidated view' /><div class='caption'><p>The consolidated view in Google Calendar shows available calendars in the left sidebar. Activate available calendars by toggling on/off the colored box before the calendar's name. Only events from active calendars appear in the consolidated calendar view.</p></div>" +
    "<h3 id='sync_hdr'>Syncing the Mobile Phones</h3><p>In order for the calendars on our phones to include up-to-date event details from our Google family calendar, we had to be sure that our Gmail accounts are added and synced with our phone's list of accounts.  As I mentioned earlier, Google provides <a href='https://support.google.com/calendar/bin/topic.py?hl=en&amp;topic=13950&amp;p=syncmobile'>instructions on how to do this setup</a>.</p>" +
    "<p>Even with these instructions, we had problems getting the Windows 7 phone to show the family calendar events.  Luckily, we found <a href='http://support.microsoft.com/kb/2430181'>this Microsoft support article</a> that explains how to sync multiple Google calendars to the Windows phone.  After following the steps in this article, including the <a href='http://support.microsoft.com/kb/2430181#google'>additional setup</a> steps, and then initiating a manual sync, the family calendar events finally showed up on the Windows phone calendar.</p>" +
    "<h3 id='notifications_hdr'>Notifications</h3><p>As the family organizer, I need to be notified of <em>all</em> events that occur on our family calendar.  So I chose to have the family calendar notify me any time an event is added to it, changed or deleted. I also elected to be emailed a daily agenda from the family calendar.</p>" +
    "<p>My husband and kids, on the other hand, really only care about the events that affect them.  The best solution I found was to have them copy these specific events to their personal calendars and setup their personal calendars to send them notifications.  Of course, it's unrealistic to expect my children to remember to copy an event from the family calendar to their personal calendar so I can assist by inviting them to the family calendar events that involve them.  If they set up their personal calendars to auto-accept these invitations, the family event will automatically be copied to their personal calendars when I send the invitation.</p>" +
    "<h3 id='features_hdr'>Other Features</h3><p>Although I'd previously set up a Google Calendar, I hadn't used it to any great extent; nor was I overly familiar with the more detailed aspects of how the Google Calendar app works.  So I took some time to play around with it, creating a test calendar and seeing what I could discover.  It didn't take too long to understand that there were two types of settings: those for individual calendars and overall settings for the application that apply to all calendars. These settings are all accessible from the left sidebar of your Google Calendar home page.  To edit general settings, hover over the 'My calendars' heading, select the drop-down arrow that appears to the right, and select 'Settings'.  For individual calendar settings, do the same except hover over the individual calendar's name in the sidebar listings.</p>" +
    "<p>Within each Settings page, you can select from the tabbed links at the top to define how you want your calendars to work.  Ample help is available on (or a link away from) these pages so I'll leave you to it.  But there are two features that I found particularly useful:</p>" +
    "<ul><li><strong>Mobile Setup</strong> (accessible from the overall settings page or from an individual calendar's Notifications page) lets Google send event notifications to your mobile phone.  Simply input your country and mobile phone number in the Mobile Setup page,  click the button to send a verification code to your phone through your phone's carrier, retrieve that code from your phone's text messages and input it back on the Mobile Setup page.  It's quick and easy, and now I'm getting reminders on my phone, which is immensely helpful.</li><li><strong>Color coded calendar events</strong>:  In the left sidebar of your Google Calendar's home page, you can filter which calendars are included in your consolidated view by toggling on and off the colored boxes beside the calendars' names.  Moreover, you can designate the color to be associated with a given calendar (in the drop-down menu beside the calendar's name) and it will be the default color for all events added to that calendar.  All-day events will be highlighted in the designated color; otherwise, the event title text will be shown in the calendar's designated color.  This feature allows you to quickly determine from which calendar an event originated.</li></ul>" +
    "<h3 id='goodbye_hdr'>Goodbye Paper Calendar...</h3><p>Now that I have my family's calendar set up in the cloud, I guess I don't really need that paper calendar hanging in my kitchen anymore.  But old habits die hard and I really like being able to glance at the day's events each morning as we're walking out the door.  It's okay, though, because there's a solution that not only lets me keep my kitchen calendar, it improves it:  grab a pack of 3M's heavy-duty \"damage free\" picture hanging strips, stick them to the back of an iPad or tablet (my husband gave me his old Android ASUS tablet to use), hang it on the wall somewhere near a power outlet so you can keep it plugged in, and sync its calendar app to your Gmail calendar.  Not only can I still glance at it as we're leaving for the day... I can see it when we get home at night without having to turn on the lights.  (Plus having a tablet in your kitchen is super convenient for things like looking up recipes on the web and managing a shopping list.)  Awesome!</p>" +
    "<img class='aligncenter size-full wp-image-109' title='tablet' src='assets/images/tablet.jpg' alt='tablet' width='640' height='427' />" +
    "<p>By embracing change and moving to a cloud-based calendar, my family is now able to conveniently see and update our \"kitchen\" calendar no matter where we are.  Further, we can quickly and easily communicate changes in our schedules with each other.  And it was so easy to set up...</p>" +
    "<p>Now I only wish I'd done it sooner.</p></div>",
    "demoLink": "",
    "codeRepo": "",
    "isFavorite": false },
  { "id": 22,
    "title": "Robotic Vacuum Wars", 
    "technology": ["iRobot Roomba 595, Neato XV-21"], 
    "summary": "Roomba vs. Neato: A Comparison", 
    "description": "<p>This project involved comparing the features and performance of two robot vacuums, Roomba and Neato.</p><p>Below is the blog post I wrote at the conclusion of the project.</p>", 
    "img": "assets/images/cats3.jpg", 
    "componentName": "",
    "component": null,
    "demo": "<div class='full-width pull-right'><p><em>Originally posted: Nov 2, 2012</em></p></div>" +
    "<div class='full-width'><p>After recently adopting three indoor cats from the local Humane Society, our home has gone from needing to be vacuumed twice a week to almost daily.  And since we don't want to spend more time vacuuming by hand, my husband and I decided to purchase a robotic vacuum to handle the increased workload.   As it turned out, we brought home two different vacuums:  the iRobot Roomba 595 Pet Vacuum and the Neato XV-21 Pet and Allergy Vacuum.</p><figure><img class='thumbnail img-responsive' title='picture of our three cats' src='assets/images/cats3.jpg' alt='picture of our three cats' /><figcaption class='caption'>The root cause of it all... (top to bottom) Murphy, Quimby and Jinx.</figcaption></figure>" +
    "<h3>The Companies</h3><p>iRobot was founded in 1990 by some roboticists from MIT.  Since this company is known for making robots  that are used by the military to dispose of bombs (<a href='http://www.irobot.com/us/robots/defense/packbot.aspx'>http://www.irobot.com/us/robots/defense/packbot.aspx</a>),  we figured they should be able to make a pretty good vacuum.  Neato (<a href='http://www.neatorobotics.com'>http://www.neatorobotics.com</a>) , on the other hand, focuses specifically on floor cleaning robots.   They came to the market after looking at what was available and deciding it could be done in a better way.</p>" +
    "<h3>Out-of-the-Box Impressions</h3><p>Inside their outer cardboard boxes, both vacuums came wrapped in bubble wrap.  Neato's packaging was rather innovative in that it's bubble wrap was sturdily formed to fit the shape of the vacuum.  Also, we liked that Neato's accessories all came packaged together so that they were quick and easy to find.</p><p>The vacuums are similar in size: approximately 13\" x 13\" x 3\" but differ in shape, with Roomba being round while the Neato is more like a filled \"U\".  Both vacuums have a \"forward\" edge that depresses so that the vacuum gives when it hits an obstacle.</p>" +
    "<img class='thumbnail image-responsive half-size' title='roomba' src='assets/images/roomba.jpg' alt='Photo of Roomba, which is disc shaped.'><div class='caption half-size'>iRobot Roomba 595 Pet Vacuum</div><img class='thumbnail image-responsive half-size' title='neato' src='assets/images/neato.jpg' alt='Photo of Neato, which is shaped like a U...that is, half circle, half square.'><div class='caption half-size'>Neato XV-21 Pet &amp; Allergy Vacuum</div>" +
    "<h3>Accessories</h3><p>Our Roomba and Neato came with many of the same accessories: a home base charging station, a brief Quick Start guide as well as a more detailed (and multi-language) user guide, and an accessory that you can use to keep the vacuum from going where you don't want it to go.</p><ul><li>For Roomba, this accessory is called a Virtual Wall<strong><sup>®</sup></strong> (two included) and it emits an invisible beam through which the Roomba cannot pass.  The beam will cover up to a seven foot wide opening.  As it gets farther from the base unit, the beam spreads out to form a cone shape rather than a narrow line so you have to position the unit to account for this shape (which takes a bit of trial and error since you can't see the beam).  The units are small, unobtrusive, and can be set to auto mode so that you can leave them in place rather than having to set them out and pick them up each time Roomba cleans.</li></ul><ul><li>Neato uses a magnetic boundary marker for restricting its movement.  The marker (strip) is placed on the floor and Neato will not cross over it.  The vacuum came with a 13' strip that can be cut into smaller pieces and you can order more from their website as needed.  The strips are nice because they clearly delineate where Neato will not be able to go but the downside is that you have to lay them out before and pick them up after Neato's cleaning cycle.</li></ul><img class='thumbnail image-responsive' title='restricters' src='assets/images/restricters.jpg' alt='photo of virtual wall unit and Neato boundary marker' />" +
    "<p>Roomba also included three replacement filters with the vacuum while Neato came with a two brushes --  a bristle 'pet &amp; allergy' brush and a standard brush that has solid, flexible blades.   Although we didn't do so, you can optionally purchase a remote control for Roomba as well as a unit called the Virtual Wall Halo that creates a buffer around your pet's food and water bowls so that the Roomba will not bump into them (and potentially cause spills).  Both vacuums offer replacement parts for purchase on their web sites.</p>" +
    "<h3>Charging</h3><p>Not surprisingly, you need to charge both vacuums completely before their first use.  (Actually, our Roomba arrived with a bit of residual charge so we were able to satisfy our initial curiosity and run it for a minute or two before having to charge it.)</p><p>You can charge Roomba in one of two ways.  Plug the charging station's power cord into a nearby outlet, set the Roomba over the station's contact strip and make sure the color of the vacuum's LED changes to indicate that it's charging.  Alternatively, you can skip the charging station and just plug the power cord directly into the Roomba.  Our Roomba was fully charged within two hours.</p><p>Neato only charges using its charging station, which (similar to Roomba) should be placed against a wall and have at least three feet of clearance to the front and sides.  Neato's rounded side is placed against the front of the charging station so that the two raised contact strips on the station are depressed.</p><p>(Note:  When we first set Neato up to charge, nothing happened.  A quick look inside the station revealed that the power cord had detached from its interior plug and after reconnecting it, the charging station powered up properly.)</p>" + 
    "<h3>Interface</h3><p>Roomba's interface uses colored LED lights, a digital clock display, and different sounds to tell you what it is doing.  Also, there are eight buttons on top of the vacuum used for setting the clock and selecting cleaning mode.</p> <p>Like Roomba, Neato's interface includes the use of colored lights, sounds and buttons but it adds an LCD panel, which makes communicating with Neato more intuitive and user friendly.  The LCD displays messages to guide you through setup (e.g., clock, scheduling) and to inform you of Neato's current state (e.g., charging, returning to charge, cleaning, stuck and needs assistance, etc.). During setup, you can select the language for the display using menu navigation buttons located beside the LCD panel.</p>" +
    "<h3>How It Cleans</h3><p>Roomba's cleaning system uses an edge-cleaning brush on one side to pull dirt under the unit where two counter-rotating brushes, in combination with vacuum suction, scoop the dirt up into the dirt bin.  Neato uses one wide rotating brush and has no edge brushes.  It relies on strong suction to pick up debris.</p> <p>Both Roomba and Neato have the same three cleaning modes: general, spot and scheduled.  General and scheduled modes are synonymous in that the vacuums clean everywhere they can reach; the only difference is that general mode is started manually while as the name suggests, scheduled mode starts automatically based on a start time you specify.  Spot cleaning mode is also started manually but the vacuums only clean a small area around where they are started.</p>" +
    "<h3>Our Cleaning Experiences...</h3><h4>...In General</h4><p>Other than when spot cleaning, our Roomba generally travels in a line until it hits something, at which point it rotates slightly and heads off in a new direction.  It makes several passes in every direction, covering some areas many, many times and others only once or twice.  It often runs along the walls or fronts of cabinets for a while before inexplicably turning and crossing the room.  When it goes over a particularly dirty area, Roomba will stop and take a spin or two around that spot to get it clean before continuing on its way, which is pretty clever. But its cleaning approach seems inefficient to us and its randomness makes us wonder if Roomba actually does go over every space, especially if we leave doors open so that Roomba can head off into another room before finishing the current room. The guide says that for most efficient cleaning, you should restrict the Roomba to one room at a time but for us, having to move Roomba from room to room within a cleaning cycle greatly reduces the benefit of using a robotic vacuum.</p>" + 
    "<div class='full-width bottom-spacer'><em>(Original ROOMBA Marketing Video no longer available)</em></div>" + 
    "<p>Neato, on the other hand, maps a room on startup by first scanning to locate and move to a nearby wall, then going along the room's perimeter until it reaches its starting point again.  At that point, Neato makes slightly overlapping passes back and forth (as you would if you were mowing your lawn) to make sure it cleans all the space within the boundaries it mapped.  Neato has the ability to detect doorways so that it will automatically map and clean one room (or section of a room, depending on furniture layout) at a time before moving on to the next.   We like this feature and the intentional, predictable cleaning pattern Neato follows.  However, Neato only goes over its pattern once during a cleaning cycle.  Sometimes, one pass provides sufficient cleaning (particularly on wood floors) but other times, Neato leaves debris behind (particularly in the transitions from carpet to hard floor) so we have to send it on a second cleaning cycle after it completes its first.   It would be nice if we could reverse its cleaning direction on the second pass.</p>" + 
    "<iframe class='thumbnail' src='http://www.youtube.com/embed/R85MLQ6o9dg' width='420' height='315' ></iframe>" + 
    "<p>Occasionally Roomba also has trouble picking up heavier debris or cat hair that's stuck to the carpeting.  On the whole, though, both Roomba and Neato pick up debris effectively, especially if you judge by the amount of dirt that fills their bins after a cleaning.  Roomba's counter-rotating brushes and multiple passes over the same area undoubtedly help it clean well but the latter also means that Roomba always takes longer to clean a room than Neato.</p>  <p>When going full speed, Roomba is still relatively quiet (similar to a box fan running on low-to-medium speed).  We found the Neato to be a little bit louder than Roomba, perhaps due to stronger suction, and that it ran out of charge sooner than the Roomba.  (Neato ran for 30 minutes and Roomba for 90 minutes before their batteries needed recharging.)  How far either vacuum gets on a single charge will vary based on the number of obstacles it has to work around, the thickness of the carpeting, etc.  When it did run low on charge, Neato did not have any trouble returning to its charging station and automatically docking.  After recharging, it auto-powered back up and completed cleaning, picking up where it left off.</p> <p>Note: Neato struggled somewhat when working on thicker carpeting (1/2' pile) with the pet brush installed.  Its motor worked very hard, causing it to use up its charge faster, and it began clicking.  We replaced the pet brush with the standard brush, after which the clicking stopped and the motor revved less.</p>  <p>Roomba will also find its way back to its charging station once it has finished vacuuming or if it begins to run low on charge but unlike the Neato, which keeps a map to its base station in memory, our Roomba is only able to return to its home base when it can detect a clear path to it.  When its battery needs recharging, Roomba's LED turns orange and the 'Dock' button starts flashing green.  If, at that point, it is too far away to find its home, we either have to pick it up and carry it back or we herd it toward to a direct path using the Virtual Wall units.  Neither way is ideal.</p> <p>We initially ran both vacuums in a room that contained three counter stools and a small table with two chairs so there were lots of legs to navigate. Roomba had a very difficult time with the chairs and stools, ping-ponging from one leg to another, and was not able to clean around them efficiently.  After removing the chairs and stools, Roomba was able to navigate just the table legs well enough.</p> <p>Our Neato was able to navigate around the stools and chairs more efficiently but like the Roomba, it works much better when they are removed.  When necessary, Neato will automatically lift its backend up to help it maneuver out of tight areas.  However, Neato did get stuck a couple of times where the Roomba did not, notably 1) under a bookcase because Neato has a raised 'scanning eye' on top that makes it taller than the Roomba and 2) under an air vent cover that Neato pushed up against a table leg, then got wedged under.  Once stuck, Neato displayed a message to let us know it needed help getting unstuck.</p><h4>...With Scheduling</h4><p>Setting a scheduled cleaning time on either vacuum is easy  and both allow you to schedule one cleaning per day, seven days a week and will repeat the scheduled time(s) unless you remove it (them). Roomba lets us schedule down to the minute while Neato only schedules on the quarter-hour.</p> <p>I scheduled a test run on each and at its schedule time, each vacuum powered up by itself and began cleaning.  Both vacuums ran low on battery power before finishing the scheduled cleaning but only Neato was able to return to its base station to recharge without assistance.   Once recharged, it powered back up and completed the job.  I don't know about Roomba -- it ran so long on its first charge that I had to leave before it completed recharging, and because I didn't want it running while I was not home to monitor it, I cancelled the remainder of the scheduled job.</p> <p>The following two videos show Roomba and Neato performing a scheduled clean over a small, restricted area (about 12' x 8').</p>" +
    "<div class='video'><dl class='thumbnail center-block' style='width: 430px;'><dt class=''><iframe src='http://www.youtube.com/embed/yaNTr5s2oyY' frameborder='0' width='420' height='315'></iframe></dt><dd class=''>Roomba's actual run time was 29 minutes. Video condensed to 2:01 minutes.</dd></dl></div>" + 
    "<div class='video'><dl class='thumbnail center-block' style='width: 430px;'><dt class=''><iframe src='http://www.youtube.com/embed/p13v9YVXdOw' frameborder='0' width='420' height='315'></iframe></dt><dd class=''>Neato's actual run time was 9:30 minutes. Video condensed to 1:03 minutes.</dd></dl></div>" +
    "<h4>...On the Spot</h4><p>While both Neato and Roomba provide a spot cleaning mode, they work differently.</p> <p>Roomba spot cleans in a circle around its starting point, spiraling out in overlapping but increasingly larger circles until it reaches a diameter of about 3.5' feet.  Then it begins to decrease the size of its circles, spiraling inward back to original starting position, and powers down.</p>" +
    "<div class='video'><dl class='thumbnail center-block' style='width: 430px;'><dt class=''><iframe src='http://www.youtube.com/embed/jSFPpWbZCUc' frameborder='0' width='420' height='315'></iframe></dt><dd class=''>In a spot clean test with one ounce of barley grains, Roomba left behind quite a few seeds, in part because its fast-rotating edge brush scattered them. (Video shown at 2.35x original speed.)</dd></dl></div>" + 
    "<p>Neato spot cleans in the shape of a 6' x 4' rectangle.  From its starting position, Neato outlines the perimeter of the rectangle in front of it, then lines up at one end of the perimeter and goes back and forth lengthwise until it has cleaned the area within the perimeter.  Neato then returns to its starting position and powers down.</p>" +
    "<div class='video'><dl class='thumbnail center-block' style='width: 430px;'><dt class=''><iframe src='http://www.youtube.com/embed/BcYh8tg46rY' frameborder='0' width='420' height='315'></iframe></dt><dd class=''>In a spot clean test with one ounce of barley grains, Neato only left behind four seeds. (Video shown at 8x original speed.)</dd></dl></div>" + 
    "<h3>Cost and Other Features</h3><p>We purchased the Roomba from Costco for $299.  Roomba's other features include cliff detection to keep it from falling off stairs, dirt detection (i.e., the spinning movement described earlier) to automatically intensify its cleaning effort in dirtier areas, and an anti-tangle system that reverses Roomba's brushes to unravel any cords or tassels that it sucks up.</p> <p>Neato can also sense drop offs so that it won't fall down stairs.  Unlike Roomba, though, it doesn't have special dirt detection or an anti-tangle feature so you need to secure or remove cords, cables, tassels and the like before vacuuming.  Both vacuums automatically adjust to changes in flooring height.</p> <p>We purchased our Neato at Best Buy for $380 (minus our Silver Rewards discount).  Though it is significantly more expensive than the Roomba, Neato lets you upgrade its firmware using a USB port on the side of the vacuum, so you can potentially get performance improvements without having to buy a new vacuum.</p><h3>Maintenance</h3> <p>Maintenance of both vacuums is very similar:  After each cleaning cycle, you need to remove and clean the dirt bin and air filter and ensure that the rotating brushes are free from hair and other debris. These parts are easy to access and both user guides provide easy-to-follow instructions on  how to remove and clean them.  The wheels and cliff/drop sensors also need to be cleaned periodically to ensure the vacuum is able to operate properly. Roomba's guide recommends replacing the air filter every two months while Neato's guide recommends replacement every three to six months of typical use.   Both guides recommend that you keep the vacuum charging in its base station when not in use in order to prolong battery life.</p>" +
    "<h3>Conclusion</h3><p>While in many ways, Roomba and Neato are very similar, and both provide some unique features that we like as well as some that we could do without.  Ideally, there will one-day be a reasonably priced 'super vacuum' whose design incorporates the best features from both these vacuums:</p> From Roomba, <ul> <li>counter-rotating and edge brushes</li> <li>dirt detection</li> <li>anti-tangle system</li> <li>double passes over the area</li> </ul> From Neato, <ul> <li>strong suction</li> <li>room mapping</li> <li>intelligent cleaning pattern</li> <li>door detection to clean one room at a time</li> <li>upgradable firmware</li> <li>self-raising backend for maneuverability</li> </ul> <p>It would also be nice to include a small brush especially designed to clean the air filter and/or a washable air filter. Until then, though, both robots do a good job and running either one daily will definitely help keep the floors clean.  Obviously, they aren't a complete replacement for manual vacuuming since there are always areas that they can't reach.  But they are great for doing the daily once-over to help keep the house looking nice.  Overall, which one is better?  Personally, I preferred the Neato but in the end, we decided to keep both vacuums -- one for upstairs and one for downstairs -- because their different strengths suit the specific characteristics of the rooms they now call home.</p>" +
    "<h3>Quick Comparison Table:</h3><table class='bottom-spacer'> <tbody> <tr> <th width='26%'></th> <th width='37%'>iRobot Roomba 595 Pet Vacuum</th> <th width='37%'>Neato XV-21 Pet and Allergy Vacuum</th> </tr> <tr> <td>Price</td> <td valign='top' width='37%'>Costco: $299</td><td>Best Buy: $380  (minus our  Best Buy Silver Rewards member discount)</td> </tr>    <tr> <td>Packaging</td> <td>thin bubble wrap interior packaging, accessories spread throughout box</td> <td>innovative interior packaging -- well protected, formed, sturdy bubble strips.    all accessories come in a single box</td> </tr><tr><td>Size &amp; Shape</td> <td>circular with 12' diameter</td> <td>filled  12'x 12.75' U shape</td> </tr> <tr> <td>Comes with Quick Start guide?</td> <td>yes</td> <td>yes</td> </tr> <tr> <td>Charging mechanism</td> <td>vacuum placed over charging contacts on base station or power cord plugged directly into vacuum.</td> <td>vacuum positioned against base station so that two contact bumper strips are depressed.</td> </tr>  <tr> <td>Interface</td> <td>Buttons, LED lights, digital clock display, and sounds.</td> <td>LCD panel (written messages in language of choice), indicator light, buttons and sounds</td> </tr> <tr> <td>Initial charge time</td> <td>2 - 3 hours</td> <td>2 - 3 hours</td> </tr> <tr> <td>Cleaning mechanism</td> <td>Edge-cleaning brush pulls dirt under unit where two counter-rotating brushes and suction pick up dirt</td> <td>Wide brush and strong suction pick up dirt</td> </tr> <tr> <td>Cleaning modes</td> <td>General, spot, scheduled</td> <td>General, spot, scheduled</td> </tr> <tr> <td>Cleaning pattern</td> <td><em>Spot:</em> spirals out to 3.5' diameter and back. <em>General/Scheduled: </em>criss-crossing passes, wall following, spins around dirtier spots; makes multiple passes over same area; doesn't recognize change from one room to next so moves randomly among rooms if Virtual Wall units are not used.</td>  <td><em>Spot:</em> covers 6' x 4' rectangle <em>General/Scheduled:</em> maps exterior of a room then back and forth within the mapped boundaries; single pass over entire area; detects doorways so does one room completely before moving on to next.</td> </tr>    <tr> <td>Noise level</td> <td>Relatively quiet</td><td>A little louder than Roomba but not so loud you can't talk while it's vacuuming the room you are in</td> </tr> <tr> <td>Restricting areas</td> <td>uses Virtual Wall units that emit an invisible, cone-shaped  beam that Roomba will not cross</td> <td>uses magnetic strips placed on the floor that Neato will not cross</td> </tr> <tr> <td>Recommended Maintenance</td> <td>clean dirt bin and filter each cleaning cycle; clean brushes as needed</td> <td>clean dirt bin, filter and drop sensors each cleaning cycle; clean brushes as needed</td> </tr> <tr> <td>Accessories</td> <td>three replacement filters, two Virtual Wall units &amp; charging station come with vacuum.  Also remote control and Virtual Wall Halo may be purchased.</td> <td>charging station, standard brush &amp; 13' boundary marker comes with vacuum.  May purchase additional boundary marker.</td></tr>  <tr> <td>Firmware upgradable?</td> <td>no</td> <td>yes</td> </tr> <tr> <td>Detects drop offs</td> <td>yes</td> <td>yes</td> </tr> <tr> <td>Anti-tangle system</td> <td>yes</td> <td>no</td> </tr> <tr> <td>Navigating obstacles and tight areas</td> <td>Edge detection; Rotates and retries forward movement until successful</td> <td>Edge detection; Laser mapping; Lifts backend up to maneuver around obstacles and out of tight spots</td> </tr> </tbody></table></div><div class='bottom-spacer'></div>",
    "demoLink": "",
    "codeRepo": "",
    "isFavorite": false }
];